@use "@/styles/abstracts/index" as *;
@use "@/styles/abstracts/fonts" as *;

@mixin colorFontAndIcon($color) {
  color: $color;
  svg {
    path {
      fill: $color;
    }
  }
}

.DialogOverlay {
  background-color: $black;
  opacity: 0.3;
  position: fixed;
  inset: 0;
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.DialogContent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background-color: var(--foreground);
  color: $mediumGrey;
  border-radius: 6px;
  box-shadow: -3px 7px 16px -9px transparentColor(0.2, $mainPurple),
    1px 1px 6px -1px rgba(0, 0, 0, 0.1);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 450px;
  max-height: 85vh;
  overflow: scroll;
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }

  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
  padding: 1rem;

  .ModalItem {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .ItemsList {
  }

  label {
    font-size: clamp($fs-200, 2vw, $fs-400);
    color: var(--color);
    font-weight: $fw-bold;
  }

  button {
    @include ts-heading-m;
  }

  p {
    @include ts-body-l;
  }

  &:focus {
    outline: none;
  }

  .DialogTitle {
    max-width: 90%;
    overflow: hidden;
    margin: 0;
    color: var(--color);
    @include ts-heading-xl;
  }

  .DialogTitle.Warn {
    color: $red;
  }
}

.TitleWithIcon {
  display: flex;
  justify-content: space-between;
  button {
    padding: 5px;
  }
}
